{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-feedback/src/components/App.jsx\";\n// 1 - Віджет відгуків\n// Як і більшість компаній, кафе Expresso збирає відгуки від своїх клієнтів.\n// Твоє завдання – створити додаток для збору статистики.Є лише три варіанти\n// зворотного зв'язку: добре, нейтрально і погано.\n// Крок 1\n// Застосунок повинен відображати кількість зібраних відгуків для кожної\n// категорії. Застосунок не повинен зберігати статистику відгуків між різними\n// сесіями(оновлення сторінки).\n// Стан застосунку обов'язково повинен бути наступного вигляду, додавати\n// нові властивості не можна.\n\n/* state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n} */\n// Інтерфейс може мати такий вигляд.\n// component preview\n// Крок 2\n// Розшир функціонал застосунку таким чином, щоб в інтерфейсі відображалося більше статистики про зібрані відгуки. Додай відображення загальної кількості зібраних відгуків з усіх категорій та відсоток позитивних відгуків. Для цього створи допоміжні методи countTotalFeedback() і countPositiveFeedbackPercentage(), які підраховують ці значення, ґрунтуючись на даних у стані (обчислювані дані).\n// component preview\n// Крок 3\n// Виконай рефакторинг застосунку. Стан застосунку повинен залишатися у кореневому компоненті <App>.\n// Винеси відображення статистики в окремий компонент <Statistics good={} neutral={} bad={} total={} positivePercentage={}>.\n// Винеси блок кнопок в компонент <FeedbackOptions options={} onLeaveFeedback={}>.\n// Створи компонент <Section title=\"\">, який рендерить секцію із заголовком і дітей (children). Обгорни кожен із <Statistics> і <FeedbackOptions> у створений компонент секції.\n// Крок 4\n// Розшир функціонал застосунку таким чином, щоб блок статистики рендерився тільки після того, як було зібрано хоча б один відгук. Повідомлення про відсутність статистики винеси в компонент <Notification message=\"There is no feedback\">.\n// component preview\nimport { Component } from 'react';\nimport { Feedback } from './Feedback/Feedback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleAddFeedback = option => {\n      this.setState(prevState => {\n        return {\n          [option]: prevState[option] + 1\n        };\n      });\n    };\n  }\n\n  render() {\n    // const { good, neutral, bad } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101'\n      },\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(Feedback, {\n          options: Object.keys(this.state),\n          onLeaveFeedback: this.handleAddFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["Component","Feedback","App","state","good","neutral","bad","handleAddFeedback","option","setState","prevState","render","height","display","justifyContent","alignItems","fontSize","color","Object","keys"],"mappings":";AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCG,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAOjCC,iBAPiC,GAObC,MAAM,IAAI;AAC5B,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACL,WAACF,MAAD,GAAUE,SAAS,CAACF,MAAD,CAAT,GAAoB;AADzB,SAAP;AAGD,OAJD;AAKD,KAbgC;AAAA;;AAejCG,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,QAAQ,EAAE,EALL;AAMLC,QAAAA,KAAK,EAAE;AANF,OADT;AAAA,6BAUE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAjB,CADX;AAEE,UAAA,eAAe,EAAE,KAAKI;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AApCgC","sourcesContent":["// 1 - Віджет відгуків\n\n// Як і більшість компаній, кафе Expresso збирає відгуки від своїх клієнтів.\n// Твоє завдання – створити додаток для збору статистики.Є лише три варіанти\n// зворотного зв'язку: добре, нейтрально і погано.\n\n// Крок 1\n\n// Застосунок повинен відображати кількість зібраних відгуків для кожної\n// категорії. Застосунок не повинен зберігати статистику відгуків між різними\n// сесіями(оновлення сторінки).\n\n// Стан застосунку обов'язково повинен бути наступного вигляду, додавати\n// нові властивості не можна.\n\n/* state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n} */\n\n// Інтерфейс може мати такий вигляд.\n\n// component preview\n// Крок 2\n\n// Розшир функціонал застосунку таким чином, щоб в інтерфейсі відображалося більше статистики про зібрані відгуки. Додай відображення загальної кількості зібраних відгуків з усіх категорій та відсоток позитивних відгуків. Для цього створи допоміжні методи countTotalFeedback() і countPositiveFeedbackPercentage(), які підраховують ці значення, ґрунтуючись на даних у стані (обчислювані дані).\n\n// component preview\n// Крок 3\n\n// Виконай рефакторинг застосунку. Стан застосунку повинен залишатися у кореневому компоненті <App>.\n\n// Винеси відображення статистики в окремий компонент <Statistics good={} neutral={} bad={} total={} positivePercentage={}>.\n// Винеси блок кнопок в компонент <FeedbackOptions options={} onLeaveFeedback={}>.\n// Створи компонент <Section title=\"\">, який рендерить секцію із заголовком і дітей (children). Обгорни кожен із <Statistics> і <FeedbackOptions> у створений компонент секції.\n// Крок 4\n\n// Розшир функціонал застосунку таким чином, щоб блок статистики рендерився тільки після того, як було зібрано хоча б один відгук. Повідомлення про відсутність статистики винеси в компонент <Notification message=\"There is no feedback\">.\n\n// component preview\nimport { Component } from 'react';\nimport { Feedback } from './Feedback/Feedback';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleAddFeedback = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  render() {\n    // const { good, neutral, bad } = this.state;\n    return (\n      <div\n        style={{\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 40,\n          color: '#010101',\n        }}\n      >\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleAddFeedback}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}