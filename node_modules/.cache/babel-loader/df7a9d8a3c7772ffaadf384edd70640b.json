{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-feedback/src/components/Feedback/Feedback.jsx\";\nimport PropTypes from 'prop-types';\nimport { Btn, List, Title, Wrapper } from './Feedback.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Feedback = _ref => {\n  let {\n    options,\n    onLeaveFeedback\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Please leave feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Btn, {\n        onClick: () => onLeaveFeedback(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Feedback;\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-feedback/src/components/Feedback/Feedback.jsx"],"names":["PropTypes","Btn","List","Title","Wrapper","Feedback","options","onLeaveFeedback","map","option","index","propTypes","arrayOf","string","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,OAA3B,QAA0C,mBAA1C;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAiC;AACxD,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBACGD,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX,QAAC,GAAD;AAAiB,QAAA,OAAO,EAAE,MAAMH,eAAe,CAACE,MAAD,CAA/C;AAAA,kBACGA;AADH,SAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbM;KAAML,Q;AAebA,QAAQ,CAACM,SAAT,GAAqB;AACnBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,MAA5B,EAAoCC,UAD1B;AAEnBP,EAAAA,eAAe,EAAEP,SAAS,CAACe,IAAV,CAAeD;AAFb,CAArB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Btn, List, Title, Wrapper } from './Feedback.styled';\n\nexport const Feedback = ({ options, onLeaveFeedback }) => {\n  return (\n    <Wrapper>\n      <Title>Please leave feedback</Title>\n      <List>\n        {options.map((option, index) => (\n          <Btn key={index} onClick={() => onLeaveFeedback(option)}>\n            {option}\n          </Btn>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}