{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 1 - Віджет відгуків\n// Як і більшість компаній, кафе Expresso збирає відгуки від своїх клієнтів.\n// Твоє завдання – створити додаток для збору статистики.Є лише три варіанти\n// зворотного зв'язку: добре, нейтрально і погано.\n// Крок 1\n// Застосунок повинен відображати кількість зібраних відгуків для кожної\n// категорії. Застосунок не повинен зберігати статистику відгуків між різними\n// сесіями(оновлення сторінки).\n// Стан застосунку обов'язково повинен бути наступного вигляду, додавати\n// нові властивості не можна.\n\n/* state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n} */\n// Інтерфейс може мати такий вигляд.\n// component preview\n// Крок 2\n// Розшир функціонал застосунку таким чином, щоб в інтерфейсі відображалося більше статистики про зібрані відгуки. Додай відображення загальної кількості зібраних відгуків з усіх категорій та відсоток позитивних відгуків. Для цього створи допоміжні методи countTotalFeedback() і countPositiveFeedbackPercentage(), які підраховують ці значення, ґрунтуючись на даних у стані (обчислювані дані).\n// component preview\n// Крок 3\n// Виконай рефакторинг застосунку. Стан застосунку повинен залишатися у кореневому компоненті <App>.\n// Винеси відображення статистики в окремий компонент <Statistics good={} neutral={} bad={} total={} positivePercentage={}>.\n// Винеси блок кнопок в компонент <FeedbackOptions options={} onLeaveFeedback={}>.\n// Створи компонент <Section title=\"\">, який рендерить секцію із заголовком і дітей (children). Обгорни кожен із <Statistics> і <FeedbackOptions> у створений компонент секції.\n// Крок 4\n// Розшир функціонал застосунку таким чином, щоб блок статистики рендерився тільки після того, як було зібрано хоча б один відгук. Повідомлення про відсутність статистики винеси в компонент <Notification message=\"There is no feedback\">.\n// component preview\nexport const App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 40,\n      color: '#010101'\n    },\n    children: [\"React homework template\", /*#__PURE__*/_jsxDEV(Feedback, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["App","height","display","justifyContent","alignItems","fontSize","color"],"mappings":";;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA,OAAO,MAAMA,GAAG,GAAG,MAAM;AACvB,sBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,UAAU,EAAE,QAJP;AAKLC,MAAAA,QAAQ,EAAE,EALL;AAMLC,MAAAA,KAAK,EAAE;AANF,KADT;AAAA,uDAWE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBM;KAAMN,G","sourcesContent":["// 1 - Віджет відгуків\n\n// Як і більшість компаній, кафе Expresso збирає відгуки від своїх клієнтів.\n// Твоє завдання – створити додаток для збору статистики.Є лише три варіанти\n// зворотного зв'язку: добре, нейтрально і погано.\n\n// Крок 1\n\n// Застосунок повинен відображати кількість зібраних відгуків для кожної\n// категорії. Застосунок не повинен зберігати статистику відгуків між різними\n// сесіями(оновлення сторінки).\n\n// Стан застосунку обов'язково повинен бути наступного вигляду, додавати\n// нові властивості не можна.\n\n/* state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n} */\n\n// Інтерфейс може мати такий вигляд.\n\n// component preview\n// Крок 2\n\n// Розшир функціонал застосунку таким чином, щоб в інтерфейсі відображалося більше статистики про зібрані відгуки. Додай відображення загальної кількості зібраних відгуків з усіх категорій та відсоток позитивних відгуків. Для цього створи допоміжні методи countTotalFeedback() і countPositiveFeedbackPercentage(), які підраховують ці значення, ґрунтуючись на даних у стані (обчислювані дані).\n\n// component preview\n// Крок 3\n\n// Виконай рефакторинг застосунку. Стан застосунку повинен залишатися у кореневому компоненті <App>.\n\n// Винеси відображення статистики в окремий компонент <Statistics good={} neutral={} bad={} total={} positivePercentage={}>.\n// Винеси блок кнопок в компонент <FeedbackOptions options={} onLeaveFeedback={}>.\n// Створи компонент <Section title=\"\">, який рендерить секцію із заголовком і дітей (children). Обгорни кожен із <Statistics> і <FeedbackOptions> у створений компонент секції.\n// Крок 4\n\n// Розшир функціонал застосунку таким чином, щоб блок статистики рендерився тільки після того, як було зібрано хоча б один відгук. Повідомлення про відсутність статистики винеси в компонент <Notification message=\"There is no feedback\">.\n\n// component preview\n\nexport const App = () => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      React homework template\n      <Feedback />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}